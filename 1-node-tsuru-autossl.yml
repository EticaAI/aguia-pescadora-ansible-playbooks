---

# @see https://github.com/EticaAI/aguia-pescadora/issues/5
# @see https://github.com/EticaAI/aguia-pescadora/tree/master/diario-de-bordo/tsuru-inicializacao++
# @see https://github.com/fititnt/cplp-aiops/blob/master/logbook/aguia-pescadora-charlie.sh

# ansible-playbook 1-node-tsuru-autossl.yml -e paas_host=example.com
# ansible-playbook 1-node-tsuru-autossl.yml -e paas_host=aguia-pescadora-foxtrot.etica.ai

#- name: 'debug'
#  hosts: all
#  tasks:
#  - name: debug tsuru_init_configs
#    debug:
#      msg: Debug {{ hostvars[groups['all'][0]]['ansible_facts']['default_ipv4']['address'] }} // ansible_host {{ ansible_facts['all_ipv4_addresses'][0] }} paas_cluster_name {{ paas_cluster_name }}
#      #msg: Debug {{ hostvars[groups['all'][0]]['default_ipv4']['address'] }} // ansible_host {{ ansible_facts['all_ipv4_addresses'][0] }} paas_cluster_name {{ paas_cluster_name }}

- name: "Águia Pescadora PaaS Tudo-Em-Um-Nó (Tsuru PaaS, Minio, AutoSSL via OpenResty)"
  hosts: all
  remote_user: root
  vars:
    paas_host: "{{ inventory_hostname }}"
    # tsuru_target: "tsuru.{{paas_host}}
    # apps_domain: "app.{{paas_host}}"

  roles:
    - common
    - minio
    - paas-host
    # - { role: 1-node-tsuru-autossl, tsuru_initialization_only: no }

- name: "localhost: tsuru client? docker? docker-machine?"
  hosts: localhost
  vars:
    paas_master_ip: "{{ hostvars[groups['all'][0]]['ansible_facts']['default_ipv4']['address'] }}"
    paas_node1_ip: "{{ hostvars[groups['all'][0]]['ansible_facts']['default_ipv4']['address'] }}"
  roles:
    - tsuru-installer

# TODO: fazer checagem para apenas instalar o Tsuru se, e somente se, já não estiver instalado (fititnt, 2019-07-03 23:04 BRT)

# TODO: resolver problema do Tsuru não sendo reiniciado com reboot (fititnt, 2019-07-03 23:06)

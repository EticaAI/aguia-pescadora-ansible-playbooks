---
# ---------------------------------------------------------------------------- #
# LICENSE: Public Domain <https://unlicense.org/>                              #
#                                                                              #
# Work dedicated to the public domain. This file (whole or parts) can          #
# be used without needing to quote from previous source. You can relicense.    #
# -----------------------------------------------------------------------------#

# firewall.yml
# @see https://docs.ansible.com/ansible/latest/modules/ufw_module.html

- hosts: all
  gather_facts: no
  tasks:

  - name: Ubuntu? Debian?
    fail:
      msg: "Ubuntu/Debian fail"
    when: ansible_distribution != 'Debian' and ansible_distribution != 'Ubuntu'

## ufw status verbose  (before) ________________________________________________

  - name: "ufw status verbose (before)"
    shell: "ufw status verbose"
    become: "yes"
    changed_when: false
    register: ufw_status_verbose1

  - name: "ufw status verbose print (before)"
    debug: var=ufw_status_verbose1.stdout_lines

## :22 (SSH) tcp LIMIT _________________________________________________________
  - name: ":22 (SSH) tcp LIMIT"
    ufw:
      rule: limit
      port: "22"
      proto: tcp
      comment: "[aguia-pescadora/firewall] :22 (SSH) tcp LIMIT"

## :80 (HTTP) tcp ALLOW IN * ___________________________________________________
  - name: ":80 (HTTP) tcp ALLOW IN *"
    ufw:
      rule: allow
      port: "80"
      proto: tcp
      comment: "[aguia-pescadora/firewall] :80 (HTTP) tcp ALLOW IN *"

## :443 (HTTPS) tcp ALLOW IN * _________________________________________________
  - name: ":443 (HTTPS) tcp ALLOW IN *"
    ufw:
      rule: allow
      port: "443"
      proto: tcp
      comment: "[aguia-pescadora/firewall] :443 (HTTPS) tcp ALLOW IN *"

## Basic DMZ with firewall only ________________________________________________
  - name: "cluster_dmz_ips (convert string to list)"
    set_fact:
      cluster_dmz_ips_list: "{{ cluster_dmz_ips.split(',') }}"
      #other_fact: "{{ local_var * 2 }}"
      #another_fact: "{{ some_registered_var.results | map(attribute='ansible_facts.some_fact') | list }}"
    when: "cluster_dmz_ips is defined and cluster_dmz_ips != '' and cluster_dmz_ips != None"

  - name: "cluster_dmz_ips (debug 1)"
    debug: var=cluster_dmz_ips
    when: "cluster_dmz_ips is defined"

  - name: "cluster_dmz_ips (debug 2)"
    debug: var=cluster_dmz_ips_list
    when: "cluster_dmz_ips is defined"

## :* (DMZ) ALLOW IN * .........................................................
  - name: "cluster_dmz_ips"
    ufw:
      rule: allow
      src: '{{ item }}'
      comment: "[aguia-pescadora/firewall] :* (DMZ) ALLOW IN *"
    loop: "{{ cluster_dmz_ips_list }}"
    when: "cluster_dmz_ips_list is defined"

## Enable UFW (default: deny all) ______________________________________________
  - name: "Enable UFW (policy: deny)"
    ufw:
      state: enabled
      policy: deny

## ufw status verbose  (after) ________________________________________________
  - name: "ufw status verbose (after)"
    shell: "ufw status verbose"
    become: "yes"
    changed_when: false
    register: ufw_status_verbose2

  - name: "ufw status verbose print (after)"
    debug: var=ufw_status_verbose2.stdout_lines
